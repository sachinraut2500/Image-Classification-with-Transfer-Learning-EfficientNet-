# -*- coding: utf-8 -*-
"""Image Classification with Transfer Learning (EfficientNet).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pKYgrwW1BbCxeOcU-7lO2w31ebT7-_yO
"""

---

## Project 6: Image Classification with Transfer Learning (EfficientNet)

---

### `image_classification_transfer_learning.py`

```python
import tensorflow as tf
from tensorflow.keras.applications import EfficientNetB0
from tensorflow.keras.layers import Dense, GlobalAveragePooling2D
from tensorflow.keras.models import Model
from tensorflow.keras.preprocessing.image import ImageDataGenerator

def main():
    base_model = EfficientNetB0(weights='imagenet', include_top=False, input_shape=(224,224,3))
    base_model.trainable = False

    x = base_model.output
    x = GlobalAveragePooling2D()(x)
    outputs = Dense(5, activation='softmax')(x)

    model = Model(inputs=base_model.input, outputs=outputs)

    model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

    datagen = ImageDataGenerator(validation_split=0.2, rescale=1./255)

    train_gen = datagen.flow_from_directory(
        'data/images/',
        target_size=(224,224),
        batch_size=32,
        class_mode='categorical',
        subset='training'
    )
    val_gen = datagen.flow_from_directory(
        'data/images/',
        target_size=(224,224),
        batch_size=32,
        class_mode='categorical',
        subset='validation'
    )

    model.fit(train_gen, validation_data=val_gen, epochs=10)

if __name__ == "__main__":
    main()